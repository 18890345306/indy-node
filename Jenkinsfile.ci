#!/usr/bin/env groovy

/*
 * This Jenkinsfile is intended to run on https://ci.evernym.com and may fail anywhere else.
 *
 * Environment requirements:
 *  - environment variable:
 *      - INDY_AGENT_LINUX_DOCKER_LABEL: label for agents with ability
 *          to run linux docker containers
 *  - agents:
 *      - linux:
 *          - docker
 */

name = 'indy-node'

env.indyDryRun = 'true'

env.indyVerify = 'false'
env.indyVerifyStatic = 'false'

labels = [
    linux: params.INDY_AGENT_LINUX_DOCKER_LABEL ?: 'linux'
]

def locallib
stage('Load local lib') {
    node(labels.linux) {
        checkout scm
        locallib = load 'pipeline.groovy'
    }
}

library identifier: 'indy@test_jenkins_hangs', retriever: modernSCM(
    github(credentialsId: 'evernym-github-machine-user', repoOwner: 'evernym', repository: 'jenkins-shared')
)

def indyConfig = indyConfig()
indyLogger.info("local config: $locallib.config")
indyLogger.info("indy config: $indyConfig")

def buildDebUbuntu = { releaseVersion, sourcePath ->
    def volumeName = "$name-deb-u1604"
    if (env.BRANCH_NAME && env.BRANCH_NAME != 'master') {
        volumeName = "${volumeName}.${env.BRANCH_NAME}"
    }
    if (sh(script: "docker volume ls -q | grep -q '^$volumeName\$'", returnStatus: true) == 0) {
        sh "docker volume rm $volumeName"
    }
    dir('build-scripts/ubuntu-1604') {
        sh "./build-$name-docker.sh \"$sourcePath\" $releaseVersion $volumeName"
        sh "./build-3rd-parties-docker.sh $volumeName"
    }
    return "$volumeName"
}



// PIPELINE
indyPipeline {
    timeout = 60

    // TODO
    onFail = { err ->
        println(err.toString())
    }
    onSuccess = {
        "Success"
    }

    stages = [
        ['indyVerifyStatic', {}],
        ['indyVerify', {
            labels = this.labels.collect {k, v -> v}
            dockers = locallib.config.dockers
            tests = locallib.config.tests
        }],
        ['indyAutoMergePR', {}],
        ['indyPackaging', {
            version = "0.0.0.${this.env.BUILD_NUMBER}" // XXX TODO FIXME
            builders.deb = buildDebUbuntu
        }]
    ]
}
